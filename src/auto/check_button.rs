// This file was generated by gir (f8c137b) from gir-files (11e0e6d)
// DO NOT EDIT

use Actionable;
use Bin;
use Buildable;
use Button;
use Container;
use ToggleButton;
use Widget;
use ffi;
use glib::translate::*;
use glib::types;
use object::*;

pub type CheckButton = Object<ffi::GtkCheckButton>;

unsafe impl Upcast<Widget> for CheckButton { }
unsafe impl Upcast<Container> for CheckButton { }
unsafe impl Upcast<Bin> for CheckButton { }
unsafe impl Upcast<Button> for CheckButton { }
unsafe impl Upcast<ToggleButton> for CheckButton { }
unsafe impl Upcast<Actionable> for CheckButton { }
unsafe impl Upcast<Buildable> for CheckButton { }

impl CheckButton {
    pub fn new() -> CheckButton {
        unsafe {
            Widget::from_glib_none(ffi::gtk_check_button_new()).downcast_unchecked()
        }
    }

    pub fn new_with_label(label: &str) -> CheckButton {
        unsafe {
            Widget::from_glib_none(ffi::gtk_check_button_new_with_label(label.to_glib_none().0)).downcast_unchecked()
        }
    }

    pub fn new_with_mnemonic(label: &str) -> CheckButton {
        unsafe {
            Widget::from_glib_none(ffi::gtk_check_button_new_with_mnemonic(label.to_glib_none().0)).downcast_unchecked()
        }
    }

}

impl types::StaticType for CheckButton {
    #[inline]
    fn static_type() -> types::Type {
        unsafe { from_glib(ffi::gtk_check_button_get_type()) }
    }
}

pub trait CheckButtonExt {
}

impl<O: Upcast<CheckButton>> CheckButtonExt for O {
}
