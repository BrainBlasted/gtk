// This file was generated by gir (df8a3f3) from gir-files (11e0e6d)
// DO NOT EDIT

use glib::translate::*;
use glib::types;
use ffi;

use object::*;
use Actionable;
use Bin;
use Buildable;
use Container;
use ToolButton;
use ToolItem;
use Widget;

pub type ToggleToolButton = Object<ffi::GtkToggleToolButton>;

unsafe impl Upcast<Widget> for ToggleToolButton { }
unsafe impl Upcast<Container> for ToggleToolButton { }
unsafe impl Upcast<Bin> for ToggleToolButton { }
unsafe impl Upcast<ToolItem> for ToggleToolButton { }
unsafe impl Upcast<ToolButton> for ToggleToolButton { }
unsafe impl Upcast<Actionable> for ToggleToolButton { }
unsafe impl Upcast<Buildable> for ToggleToolButton { }

impl ToggleToolButton {
    pub fn new() -> ToggleToolButton {
        unsafe {
            ToolItem::from_glib_none(ffi::gtk_toggle_tool_button_new()).downcast_unchecked()
        }
    }

    pub fn new_from_stock(stock_id: &str) -> ToggleToolButton {
        unsafe {
            ToolItem::from_glib_none(ffi::gtk_toggle_tool_button_new_from_stock(stock_id.to_glib_none().0)).downcast_unchecked()
        }
    }

    pub fn get_active(&self) -> bool {
        unsafe {
            from_glib(ffi::gtk_toggle_tool_button_get_active(self.to_glib_none().0))
        }
    }

    pub fn set_active(&self, is_active: bool) {
        unsafe {
            ffi::gtk_toggle_tool_button_set_active(self.to_glib_none().0, is_active.to_glib());
        }
    }

}

impl types::StaticType for ToggleToolButton {
    #[inline]
    fn static_type() -> types::Type {
        unsafe { from_glib(ffi::gtk_toggle_tool_button_get_type()) }
    }
}
